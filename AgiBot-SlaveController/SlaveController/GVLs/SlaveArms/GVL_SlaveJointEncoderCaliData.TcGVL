<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <GVL Name="GVL_SlaveJointEncoderCaliData" Id="{7eae507e-05dd-426e-b2d5-321e9d64d4f5}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
// Robot8 --joints parameters of slave arms
VAR_GLOBAL CONSTANT	
	// absolute encoder value at minimal joint positon
	g_minLinkEncoder :ARRAY[1..g_sArmNum, 1..g_sJntNum] OF DINT :=
		[15026800, 7686890, 24511, 0, 0, 0, 0, 0,
		 10489100, 4588800, 10330, 0, 0, 0, 0, 0,
		35  , 85624, 57700, 0, 0, 0, 0, 0,
		 6116900,  5078766,61396 , 0, 0, 0, 0, 0];
		 
	// absolute encoder value at maximum joint positon
	g_maxLinkEncoder :ARRAY[1..g_sArmNum, 1..g_sJntNum] OF DINT :=
		[13899866 , 276216, 46808, 0, 0, 0, 0, 0,
		 9367400, 12196650, 53080 , 0, 0, 0, 0, 0,
		  8803  , 14040, 14555, 0, 0, 0, 0, 0,
		 4991310,  12616170,18239, 0, 0, 0, 0, 0];
	
	// absolute encoder value at calibrated positon
	g_caliLinkEncoder :ARRAY[1..g_sArmNum, 1..g_sJntNum] OF DINT :=
		[6048200, 4849470, 46808, 46180 , 6018 , 49928 , 23680 , 34680, 
		 1548800, 9172500, 10330, 57272 , 13688 , 48750 , 43310 , 13951 ,
		  69906, 107792, 14555, 17188 , 38930,  40400,  35192, 5020 ,
		 13906777,  9940888, 18192 , 45120,  52590,  52590,  64913,  38950];
	
	 // if absolute encoder value cross zeros within joint motion range
	 // NOTICE: joint 7 is always 0.
	g_linkEncZeroCross :ARRAY[1..g_sArmNum, 1..g_sJntNum] OF INT :=
		[1, 0, 1, 1, 1, 1, 1, 1,
		 1, 0, 0, 1, 1, 1, 1, 1,
		 1, 1, 0, 1, 1, 1, 1, 1,
		 1, 0, 0, 1, 1, 1, 1, 1];
		 
	 // joint SDO address
	g_slaveArmNetID: ARRAY[1..4] OF T_AmsNetId:=['169.254.223.120.10.1','192.168.2.91.4.1','192.168.2.91.6.1','192.168.2.91.5.1'];
	g_slaveJointNetPort:ARRAY[1..g_sArmNum,1..g_sJntNum] OF UINT :=[
		1005,	1006,	1007,	2(1008),	3(1009),
		1005,	1006,	1007,	2(1008),	3(1009),
		1005,	1006,	1007,	2(1008),	3(1009),
		1005,	1006,	1007,	2(1008),	3(1009)];
		
//################ DO NOT modify parameters below ###########################
	// abolute encoder expanded limit buffer in case there is calibrtion error at limit position
	g_linkEncLimitBuffer :ARRAY [1..g_sJntNum] OF DINT := [2(100000),6(1000)];
	g_linkEncLimitBufferFR :ARRAY [1..g_sJntNum] OF DINT := [2(1000),6(1000)];
	
	// absolute encoder direction
	g_asbEncoderDir :ARRAY[1..g_sJntNum] OF INT :=[1, -1, -1, -1, -1, -1, -1, -1];
	g_asbEncoderDirFR :ARRAY[1..g_sJntNum] OF INT :=[-1, 1, -1, -1, -1, -1, -1, -1];
	
	// flag if joint can rotate multiple cycles
	g_multipleCyclesJoint :ARRAY[1..g_sArmNum, 1..g_sJntNum] OF INT :=
		[0, 0, 0, 1, 1, 1, 1, 1,
		 0, 0, 0, 1, 1, 1, 1, 1,
		 0, 0, 0, 1, 1, 1, 1, 1,
		 0, 0, 0, 1, 1, 1, 1, 1];
		 
	// joint position at link encoder calibrated point
	g_linkEncCaliJntPos :ARRAY[1..g_sJntNum] OF LREAL :=
		[0.0, -111.22*pi/180, 0.54608, 5(0.0)];

	
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>